module.exports = {
  "total":21971,
  "per_page":50,
  "last_page":440,
  "page":1,
  "projects":[
    {
      "id":1313,
      "url":"https:\/\/hackaday.io\/project\/1313-openmv",
      "owner_id":10526,
      "name":"OpenMV",
      "summary":"Python-powered machine vision modules",
      "description":"The OpenMV project aims at making machine vision more accessible to beginners by developing a user-friendly, open-source, low-cost machine vision platform.\r\n\r\nOpenMV cameras are programmable in Python3 and come with an extensive set of image processing functions such as face detection, keypoints descriptors, color tracking, QR and Bar codes decoding, AprilTags, GIF and MJPEG recording and more.\r\n\r\nAdditionally, OpenMV includes a cross-platform IDE (based on Qt Creator) designed specifically to support programmable cameras. The IDE allows viewing the camera&apos;s frame buffer, accessing sensor controls, uploading scripts to the camera via serial over USB (or WiFi\/BLE if available) and includes a set of image processing tools to generate tags, thresholds, keypoints etc...\r\n\r\nThe OpenMV project is a THP semifinalist and was successfully funded via Kickstarter back in 2015 and has come a long way since then.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/5817461406329458960.JPG",
      "views":204720,
      "comments":211,
      "followers":3580,
      "skulls":1368,
      "logs":19,
      "details":1,
      "instruction":0,
      "components":10,
      "images":6,
      "created":1401763612,
      "updated":1554388653,
      "tags":[
        "STM32F407",
        "camera",
        "OpenMV",
        "arm",
        "TheHackadayPrize",
        "python",
        "stm32f7",
        "machine vision",
        "ongoing project",
        "STm32f429"
      ]
    },
    {
      "id":5373,
      "url":"https:\/\/hackaday.io\/project\/5373-hack-chat",
      "owner_id":182178,
      "name":"Hack Chat",
      "summary":"Use the team chat to talk about your projects and find collaborators for whatever you are working on.",
      "description":"If you need help on your project you&apos;ve come to the right place. \r\nClick on the &quot;Public Chat&quot; button on the left top and you&apos;re automatically in. \r\n\r\nThose that just want to talk about hacking have found the place as well. All are welcome!",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7255311484679597966.png",
      "views":54165,
      "comments":193,
      "followers":2524,
      "skulls":1364,
      "logs":0,
      "details":1,
      "instruction":1,
      "components":0,
      "images":3,
      "created":1429655720,
      "updated":1561018687,
      "tags":[
        "ongoing project"
      ]
    },
    {
      "id":19035,
      "url":"https:\/\/hackaday.io\/project\/19035-zerophone-a-raspberry-pi-smartphone",
      "owner_id":61401,
      "name":"ZeroPhone - a Raspberry Pi smartphone",
      "summary":"Pi Zero-based open-source mobile phone (that you can assemble for 50$ in parts)",
      "description":"This is a mobile phone that:\r\n\r\n- First and foremost, will be a well-working reliable phone\r\n- Is as open-source as possible *while also being cheap*\r\n- Can be assembled and repaired independently\r\n- Is easy to get parts for\r\n- Doesn&apos;t have apps with privacy concerns\r\n- Allows to write your own apps in Python\r\n\r\nIt costs about 50$ in parts, and all the parts are available on eBay\/TaoBao\/etc, most of the phone can be assembled with just a soldering iron. User interface is written using Python \r\nand is being morphed into a lightweight phone-tailored UI framework.\r\n\r\nA crowdfunded manufacturing run is expected in a month - kits will be available, as well as a small batch of fully-assembled phones. Subscribe to newsletter below!",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7473031508515021059.jpg",
      "views":359203,
      "comments":148,
      "followers":1638,
      "skulls":1150,
      "logs":50,
      "details":1,
      "instruction":10,
      "components":27,
      "images":5,
      "created":1482175178,
      "updated":1552196301,
      "tags":[
        "zerophone",
        "Phone",
        "pi zero",
        "raspberry pi",
        "ongoing project",
        "hardware",
        "mobile phone",
        "2017HackadayPrize",
        "GSM"
      ]
    },
    {
      "id":3800,
      "url":"https:\/\/hackaday.io\/project\/3800-3d-printable-robot-arm",
      "owner_id":2561,
      "name":"3D Printable Robot Arm",
      "summary":"A printable robot arm, a little bigger than the usual hobby servo once.  ",
      "description":"My printable robot arm is inspired by the well known industry robots, but printable.\r\nThe goal is to develop a open source robot arm to use in private or small businesses and make robot development available for every one.  \r\nThe arm should lift about 2 kg enough to perform every day tasks.  Currently robot arms are expensive or small and weak, or clumpy. \r\nIndustrial robots are expensive and dangerous and for that not suitable for using at home or schools. \r\nA Open Source printable robot can build,used and developed by every one. \r\nRobots are still expensive and hard to operate, but this must not longer be the case. \r\nA cheap 3d printed robot arm could be used by disabled persons to manage their daily needs better and more independent. Operate at dangerous but not so developed places. \r\nRemote controlled you could even us the robot to open your door if you forgot your keys.\r\n\r\nThe future Arm will include a moving base. \r\n",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/848911460535166971.jpg",
      "views":203971,
      "comments":106,
      "followers":2044,
      "skulls":1139,
      "logs":19,
      "details":1,
      "instruction":1,
      "components":4,
      "images":6,
      "created":1420754811,
      "updated":1563280237,
      "tags":[
        "ongoing project",
        "hardware",
        "hackadayprize",
        "arduino",
        "robot arm",
        "led",
        "ROBOT",
        "2015HackadayPrize",
        "3D Print"
      ]
    },
    {
      "id":13466,
      "url":"https:\/\/hackaday.io\/project\/13466-raspberry-pi-smart-mirror",
      "owner_id":148563,
      "name":"Raspberry Pi Smart Mirror",
      "summary":"A mirror which displays applications, other useful information",
      "description":"In this video, we show you how to make an easy raspberry pi powered home smart mirror. It displays applications so that you can check the weather and local news while you are getting ready in the morning. It&apos;s also modular, so you can easy move it around or hang it on the wall if you like.  We&apos;ve created a basic application that you can run on the mirror, but it&apos;s totally customizable if you want to write some of your own code. \r\n\r\nIn the future, we plan to add AI components to make this fully automated. We are drawing inspiration from this project:  <a href=\"https:\/\/www.youtube.com\/watch?v=sc9UbREmo58\" target=\"_blank\">https:\/\/www.youtube.com\/watch?v=sc9UbREmo58<\/a>. Stay tuned for a future video about that!",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/4075911473092005133.jpg",
      "views":168048,
      "comments":30,
      "followers":1827,
      "skulls":1085,
      "logs":0,
      "details":1,
      "instruction":0,
      "components":6,
      "images":1,
      "created":1473092117,
      "updated":1562854669,
      "tags":[
        "Software",
        "raspberry pi",
        "hardware",
        "completed project"
      ]
    },
    {
      "id":1538,
      "url":"https:\/\/hackaday.io\/project\/1538-portablesdr",
      "owner_id":9087,
      "name":"PortableSDR",
      "summary":"Fully stand-alone HF (Shortwave) Software Defined Transceiver & Vector Network Analyzer. Designed for rugged portable use. Highly hackable.",
      "description":"The PSDR is a completely stand-alone (no computer needed), compact, Portable Software Defined Transceiver (hence the name, sorta). Originally designed for backpacking use by Ham Radio operators. It includes complete coverage up to about 30Mhz (plus 144Mhz), it has a 168Mhz ARM processor, color display, and an innovative interface.\r\n\r\nVector Network Analysis (which includes antenna analysis) and GPS functions are included.\r\n\r\nThe entire design is Open Source. The electronics are designed and laid out to be easy to understand and tinker with. In addition to source code, schematics, board layout and parts lists, articles and videos describing the theory of the design are being created.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7760611421216476601.jpg",
      "views":193949,
      "comments":200,
      "followers":2377,
      "skulls":1001,
      "logs":28,
      "details":1,
      "instruction":8,
      "components":16,
      "images":6,
      "created":1403234611,
      "updated":1555630231,
      "tags":[
        "TheHackadayPrize",
        "ham radio",
        "ongoing project",
        "Amateur Radio",
        "rf",
        "PortableSDR",
        "SDR",
        "arm",
        "VNA",
        "radio",
        "PSDR",
        "STM32"
      ]
    },
    {
      "id":283,
      "url":"https:\/\/hackaday.io\/project\/283-pcb-mill-for-under-10",
      "owner_id":894,
      "name":"PCB mill for under $10",
      "summary":"pcb mill built from garbage using basic hand tools and little money",
      "description":"A gradually improving attempt to make a useful pcb mill out of a printer and other assorted garbage, with a minimal budget and no fancy tools. It works!, but let's see how much better it can be.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/9555871394520169199.jpg",
      "views":214328,
      "comments":62,
      "followers":2541,
      "skulls":961,
      "logs":9,
      "details":1,
      "instruction":0,
      "components":11,
      "images":6,
      "created":1393891681,
      "updated":1552165567,
      "tags":[
        "plotter",
        "ongoing",
        "garbage",
        "pcb mill",
        "arduino",
        "cheap",
        "vector graphics"
      ]
    },
    {
      "id":12211,
      "url":"https:\/\/hackaday.io\/project\/12211-arduino-glasses-a-hmd-for-multimeter",
      "owner_id":55607,
      "name":"Arduino Glasses a HMD for Multimeter",
      "summary":"Building an HMD with no special parts, to make work easier and safer",
      "description":"Trying to build a cheap Arduino Data Glasses for everybody.<br>It&apos;s working, and now it can even help to avoid accidents. From the first idea to the working prototype, it took 4 Month<br><br>The challenge was, that It should be constructed out of common materials that can be found easily.<br>The project is more about how to build the optical system for this HMD<br>I have a few ideas and one of them is to connect it to a Multimeter over Bluetooth to get the Data right in front of my eyes.<br>One thing is clear, you can not just place a screen in front of your eyes, because it will not be possible for them to focus it.<br><br>In the logs you can see from the first tests to what I have now. <br>The whole project runs under Open Source License.<br><br>And please, if you use my design, do not forget to mention that it is based on my idea and add a link to my homepage <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http:\/\/www.alainsprojects.com\">www.alainsprojects.com<\/a>.<br>Thank y",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/2744261482922947650.jpg",
      "views":240964,
      "comments":93,
      "followers":1259,
      "skulls":905,
      "logs":37,
      "details":1,
      "instruction":6,
      "components":9,
      "images":6,
      "created":1465843545,
      "updated":1562608591,
      "tags":[
        "ongoing project",
        "bluetooth",
        "head mounted display",
        "hardware",
        "arduino data glass",
        "cheap",
        "arduino",
        "2016HackadayPrize",
        "GOOGLE GLASS",
        "hmd",
        "wearable"
      ]
    },
    {
      "id":2040,
      "url":"https:\/\/hackaday.io\/project\/2040-web-security-everywhere",
      "owner_id":19546,
      "name":"Web security everywhere",
      "summary":"Secure your Internet, control your data, fight censorship.\r\nBring your autonomous all in one privacy device everywhere.",
      "description":"In a world where digital privacy doesn't exist anymore, where journalists couldn't securely do their work, where companies are spyed upon by various entities, and where Human Rights are cynically disregarded, there is an urgent need for an easy-to-use tool to restore digital privacy.\r\n\r\nThis autonomous device uses the available connectivity to build a secure access-point and bypasses internet filters to connect to a remote network, use a secured internet or even browse anonymously.\r\nConnect your laptop\/smartphone to the device's secured wifi access-point, no additional setup is needed. Enjoy a secured internet anywhere, anytime.\r\n\r\nIt could connect the internet via a public wifi access-point, 3G internet via phone usb\/wifi tethering, corporate cable network, or even your own router\/ADSL box.\r\n\r\nIt is very easy to use with its touch control interface and its fully automatized functions.\r\n\r\nIt could run autonomously during several hours on its internal battery.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/8176021410091861327.JPG",
      "views":177827,
      "comments":38,
      "followers":3679,
      "skulls":895,
      "logs":31,
      "details":1,
      "instruction":6,
      "components":10,
      "images":5,
      "created":1406155716,
      "updated":1560728833,
      "tags":[
        "TOR",
        "security",
        "2015HackadayPrize",
        "TheHackadayPrize",
        "wifi",
        "ongoing project",
        "ROUTER",
        "raspberry pi",
        "accesspoint",
        "internet",
        "vpn",
        "web"
      ]
    },
    {
      "id":1395,
      "url":"https:\/\/hackaday.io\/project\/1395-open-source-science-tricorder",
      "owner_id":11110,
      "name":"Open Source Science Tricorder",
      "summary":"Science in your hand.  A pocket-sized instrument capable of visualizing and exploring the world around you. ",
      "description":"It is my deep belief that knowledge brings about positive change. \r\n\r\nWe could live in a world where the same instrument that can show a child how much chlorophyll is in a leaf could also show how them much pollution is in the air around us, or given off by one's car. As an educator and a researcher, I feel that if people could easily discover things about their worlds that were also important social topics, that they would then make positive social choices, like reducing their emissions, or petitioning for cleaner industry in their communities. \r\n\r\nBy having access to general inexpensive sensing tools, people can learn about healthy leaves, clean air, clouds and the water cycle, energy efficient homes \u2014 and visualize abstract concepts like spectra or magnetism.\r\n\r\nAs a tool for exploration, we can discover things around us that we don't already know. And that's what it's about. Little discoveries, everywhere. ",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/3776181414477226534.jpg",
      "views":121092,
      "comments":91,
      "followers":3045,
      "skulls":879,
      "logs":17,
      "details":1,
      "instruction":3,
      "components":31,
      "images":6,
      "created":1402115599,
      "updated":1552049295,
      "tags":[
        "TheHackadayPrize",
        "Tricorder",
        "sensor",
        "sensing"
      ]
    },
    {
      "id":46,
      "url":"https:\/\/hackaday.io\/project\/46-hackadayio-project",
      "owner_id":182178,
      "name":"Hackaday.io Project",
      "summary":"Follow for the 'Hacklet' and latest news about hackaday.io",
      "description":"Official Hackaday.io Project page. Here we post the Hacklet, and updates about Hackaday.io news and developments. \r\n\r\nHave a feedback? Check out our feedback page: http:\/\/hackaday.io\/project\/37-Feedback---Hackaday-Projects\r\n\r\nLooking for help? http:\/\/hackaday.io\/project\/46\/log\/460",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/1085561390426767411.png",
      "views":66526,
      "comments":47,
      "followers":348183,
      "skulls":857,
      "logs":99,
      "details":0,
      "instruction":0,
      "components":0,
      "images":2,
      "created":1390423511,
      "updated":1564155680,
      "tags":[
        "official",
        "Hackaday.io",
        "had",
        "Hackaday Projects",
        "website",
        "Hacklet",
        "hackaday",
        "ongoing project"
      ]
    },
    {
      "id":11583,
      "url":"https:\/\/hackaday.io\/project\/11583-odrive-high-performance-motor-control",
      "owner_id":137318,
      "name":"ODrive - High performance motor control",
      "summary":"Hobby brushless motors are incredibly cheap and powerful. However we need a way to make robots out of them. ODrive is that way.",
      "description":"Stepper motors are ubiquitous in hobby robotics projects: If you make a robotics or automation project today, it is very likely you will use them. Almost all DIY projects from 3D printers and CNC mills, to air hockey and juggling robots use them. However in industrial automation, brushless servomotors have taken over, and it&apos;s clear why: They don&apos;t lose steps, are much more powerful, efficient, and silent.\r\n\r\nHowever, brushless motors are not unique to expensive industrial automation equipment. In fact, you can get some very powerful and cheap motors at hobby shops. The electronics to drive these motors are also dirt cheap. So how come virtually no non-industrial automation systems use them?\r\n\r\nTo be honest, I have no idea. Seriously, a driver that allows this should clearly exist.\r\nBut since it didn&apos;t, I decided to make one.\r\n\r\nAnd you are invited!\r\nThis project is open source, both in hardware and software, and I warmly welcome anyone who wants to join.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/250351491775911522.jpg",
      "views":136757,
      "comments":180,
      "followers":3753,
      "skulls":824,
      "logs":32,
      "details":1,
      "instruction":0,
      "components":0,
      "images":4,
      "created":1462442996,
      "updated":1561018687,
      "tags":[
        "control",
        "Motor drive",
        "high power",
        "Robotics",
        "2016HackadayPrize",
        "motor control",
        "Motor",
        "brushless motor",
        "automation",
        "hardware",
        "servo motor",
        "servo",
        "ongoing project"
      ]
    },
    {
      "id":1552,
      "url":"https:\/\/hackaday.io\/project\/1552-lofi",
      "owner_id":8416,
      "name":"LoFi",
      "summary":"LoFi is a very low cost ($5), small, auto-transmitting module. Preassembled and preprogrammed. Simply attach to your appliances or projects!",
      "description":"Like many hackers and hobbyists, we dream of a smart home. Although there are third-party transceiver modules and data loggers on the market, they are too expensive and complicated to deploy in volume.\r\n\r\nLoFi is a very low cost ($5), small, auto-transmitting module. All you need to do is to attach the modules to interesting appliance circuit points or sensors throughout your home and garden. The data arrives on your PC or can be sent to the Internet with a WiFi hotspot.\r\n\r\nNo programming, no protocols to learn, and no carrier boards for you to make. Just attach!\r\n\r\nUsing your desktop or laptop, you can set trigger levels on individual modules to tell them when to transmit. For example, send an update when the voltage changes by more than 1 V on the vibration sensor near the garage door opener. You can also set the module on a timer, such as hourly on your garden monitor.\r\n\r\nThe possibilities are endless!",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/4127341403290759360.png",
      "views":109327,
      "comments":95,
      "followers":1520,
      "skulls":756,
      "logs":13,
      "details":1,
      "instruction":16,
      "components":9,
      "images":6,
      "created":1403291842,
      "updated":1552485450,
      "tags":[
        "Phant",
        "attiny",
        "433 MHz",
        "iot",
        "TheHackadayPrize",
        "Sensors",
        "internet",
        "wireless"
      ]
    },
    {
      "id":11224,
      "url":"https:\/\/hackaday.io\/project\/11224-mechaduino",
      "owner_id":79693,
      "name":"Mechaduino",
      "summary":"Mechaduino is an affordable, open-source, industrial servo motor. Position, torque, velocity, and custom modes. Arduino compatible.   ",
      "description":"Engineers use servo motors to achieve the precision motion required in applications such as robotics, automation, and CNC manufacturing.  Like RC servos, industrial servos actively correct for external disturbances.  Unlike RC servos, industrial servos can provide very accurate motion, and often support advanced motion control modes.  Unfortunately the cost of industrial servos is prohibitive to the individual maker (thousands of dollars per motor).\r\n\r\nWe&apos;ve been developing an affordable open-source industrial servo motor, opening the door to sophisticated mechatronics applications.  Our design leverages the low cost of mass produced stepper motors.  We are able to achieve very high resolution via 14b encoder feedback (after calibration routine!).  For more information, including demos of our working prototypes, check out the external links (below to the left).\r\n\r\n",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7179091466050082924.JPG",
      "views":108258,
      "comments":170,
      "followers":2441,
      "skulls":719,
      "logs":26,
      "details":1,
      "instruction":8,
      "components":7,
      "images":6,
      "created":1461338842,
      "updated":1549466203,
      "tags":[
        "control",
        "SAMD21",
        "Mechatronics",
        "Robotics",
        "ARDUINO ZERO",
        "STEPPER",
        "Anticogging",
        "Motor",
        "ongoing project",
        "servo",
        "Mechaduino",
        "hardware",
        "closed loop",
        "ROBOT",
        "2016HackadayPrize",
        "feedback"
      ]
    },
    {
      "id":1340,
      "url":"https:\/\/hackaday.io\/project\/1340-satnogs-global-network-of-ground-stations",
      "owner_id":1611,
      "name":"SatNOGS - Global Network of Ground Stations",
      "summary":"SatNOGS is an open source ground station and network, optimized for modularity, built using affordable tools and resources. ",
      "description":"SatNOGS project is a complete platform of an Open Source Networked Ground Station. The scope of the project is to create a full stack of open technologies based on open standards , and the construction of a full ground station as a showcase of the stack.\r\nSatNOGS provides the basis for:\r\n\r\n    Bulk manufacturing and deployment of affordable Satellite Ground Stations\r\n    Modular design for integration with existing and future technologies\r\n    A platform for a variety of instrumentation around Satellite Ground Station operations\r\n    A firm platform for a Ground Station collaborative network (one to one, one to many, many to many)\r\n    A community based approach on Ground Station development\r\n    A solution for massive automation of operator-less Ground Stations based on open standards\r\n\r\nCheck out our documentation on the website for detailed info.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7657121401903408421.jpg",
      "views":108278,
      "comments":42,
      "followers":1696,
      "skulls":667,
      "logs":26,
      "details":1,
      "instruction":2,
      "components":9,
      "images":6,
      "created":1401903437,
      "updated":1557751934,
      "tags":[
        "TheHackadayPrize",
        "open",
        "tracking",
        "ground Station",
        "Satellite"
      ]
    },
    {
      "id":364,
      "url":"https:\/\/hackaday.io\/project\/364-mipi-dsi-display-shieldhdmi-adapter",
      "owner_id":1867,
      "name":"MIPI DSI Display Shield\/HDMI Adapter",
      "summary":"A controller for LCD\/OLED screens with MIPI DSI interface. Arduino shield format, HDMI-to-DSI adapter & built-in framebuffer.",
      "description":"A simple controller for MIPI DSI displays, based on a Xilinx Spartan-6 FPGA.\r\n\r\nMIPI DSI is a high speed packet-based interface for delivering video data to LCD\/OLED displays. In a way it is similar to DisplayPort, with a more power-conscious (and thus complex) physical layer. DSI is mostly used in mobile devices (smartphones & tablets).\r\n\r\nI started this project as the base for building a low-cost HD projector. Later on I realized it could be also useful for VR applications and as a general-purpose graphics card for small uCs - that's why it comes in Arduino shield format.\r\n\r\n\r\n",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/3898291408351694409.jpg",
      "views":283510,
      "comments":209,
      "followers":1140,
      "skulls":650,
      "logs":8,
      "details":1,
      "instruction":5,
      "components":11,
      "images":5,
      "created":1394462087,
      "updated":1516132454,
      "tags":[
        "open hardware",
        "Xilinx",
        "LCD",
        "FPGA",
        "completed project",
        "open source",
        "arduino",
        "screen",
        "graphics",
        "mipi dsi",
        "oled"
      ]
    },
    {
      "id":20458,
      "url":"https:\/\/hackaday.io\/project\/20458-osug-open-source-underwater-glider",
      "owner_id":207659,
      "name":"OSUG: Open-Source Underwater Glider",
      "summary":"A versatile autonomous environmental drone using a buoyancy engine",
      "description":"There has been a breakthrough with low cost autonomous drones and as this capability has matured a wide range of hobby and commercial applications have developed. There are no affordable extended duration underwater exploration platforms and this project aims to address this need.\r\n\r\nUtilising commodity hardware, 3D printed parts and an open-source autopilot, I aim to produce a low cost and versatile underwater glider capable of extended missions of up to weeks at a time. I hope that by having this platform available, it would reduce the cost of underwater projects for all, from hobbyists, amateur scientists to seafood farmers.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/4599881501784526370.jpg",
      "views":100051,
      "comments":59,
      "followers":1876,
      "skulls":632,
      "logs":32,
      "details":1,
      "instruction":25,
      "components":73,
      "images":6,
      "created":1490048829,
      "updated":1558700682,
      "tags":[
        "Glider",
        "UAV",
        "Underwater",
        "atmel",
        "buoyancy",
        "ongoing project",
        "hardware",
        "monitering",
        "engine",
        "2017HackadayPrize",
        "environment"
      ]
    },
    {
      "id":86,
      "url":"https:\/\/hackaday.io\/project\/86-mooltipass-offline-password-keeper",
      "owner_id":10,
      "name":"Mooltipass Offline Password Keeper",
      "summary":"Offline password keeper project created by and for the Hackaday community",
      "description":"With time, logins and passwords have become critical elements we need to remember to access the different websites and services we use daily. If we want to achieve good security, each of these credential sets should be unique.\r\nWe therefore created the Mooltipass, a physical password keeper that remembers and encrypts your credentials so you don&apos;t have to. With this device, you can generate and safely store long and complex passwords. A personal PIN locked smartcard allows the decryption of your credentials and ensures that only you have access to them. Simply visit a website and the device will ask for your confirmation to enter your credentials when login is required.\r\nThe Mooltipass is a standalone device connected through USB, is completely driver-less and is compatible with all major operating systems on PCs, Macs and Smartphones. ",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/1138341476190202284.png",
      "views":90927,
      "comments":45,
      "followers":2105,
      "skulls":623,
      "logs":25,
      "details":1,
      "instruction":0,
      "components":4,
      "images":5,
      "created":1392495304,
      "updated":1562688736,
      "tags":[
        "hid",
        "community",
        "hackaday",
        "aes",
        "avr",
        "smart card",
        "arduino",
        "ongoing project",
        "oled",
        "developed on hackaday"
      ]
    },
    {
      "id":10207,
      "url":"https:\/\/hackaday.io\/project\/10207-gamegirl-the-retro-console-done-right",
      "owner_id":126084,
      "name":"Gamegirl: the retro console done right",
      "summary":"The most portable way to play LÖVE, PICO-8, Scratch or your favorite emulated games. Powered by RetroArch!",
      "description":"Goals:\r\n&#x2022; Hardware accelerated display!\r\n&#x2022; Custom software (Lakka \/ RetroArch)\r\n&#x2022; High quality case and buttons\r\n&#x2022; Small form factor\r\n\r\nA very affordable portable console will be made using a 120 FPS 320x240 display and a Raspberry Pi Zero. It will be thin and tiny: only 66 mm x 99 mm!\r\n\r\nThe Lakka distribution powered by RetroArch will be used because of its speed, its fast power-on and instant power-off and its potential to run many retro and hipster-retro games (L&#xD6;VE, PICO-8, Scratch and emulators).\r\n\r\n[Jean-Andr&#xE9;] from France is the software guy of this project. He is the main Lakka developer and a top 5 RetroArch contributor. [David] from Switzerland is the hardware guy.\r\n\r\n&#x2014;\r\n\r\nSupport Libretro, RetroArch and Lakka through Patreon!\r\n<a href=\"https:\/\/www.patreon.com\/libretro\" target=\"_blank\">https:\/\/www.patreon.com\/libretro<\/a>",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/6065851462034813929.jpg",
      "views":99467,
      "comments":38,
      "followers":751,
      "skulls":611,
      "logs":13,
      "details":1,
      "instruction":0,
      "components":8,
      "images":6,
      "created":1457998110,
      "updated":1559318242,
      "tags":[
        "2016HackadayPrize",
        "ongoing project",
        "MISC",
        "raspberry pi"
      ]
    },
    {
      "id":581,
      "url":"https:\/\/hackaday.io\/project\/581-tiny-robot-family",
      "owner_id":894,
      "name":"Tiny robot family",
      "summary":"A family of tiny robots, each with their own way of life.",
      "description":"This is my growing family of tiny robots based on ATtiny controllers, pager motors and photo-transistors.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/9029961395449862310.jpg",
      "views":108615,
      "comments":85,
      "followers":1241,
      "skulls":609,
      "logs":2,
      "details":1,
      "instruction":0,
      "components":7,
      "images":3,
      "created":1395450073,
      "updated":1555630231,
      "tags":[
        "attiny",
        "ROBOT",
        "collective behavior",
        "arduino",
        "pager motor",
        "miniature"
      ]
    },
    {
      "id":1279,
      "url":"https:\/\/hackaday.io\/project\/1279-ramanpi-raman-spectrometer",
      "owner_id":2424,
      "name":"ramanPi - Raman Spectrometer",
      "summary":"The open source 3D Printable Raman Spectrometer using a RaspberryPi and easy to find off the shelf components..",
      "description":"The ORIGINAL open source 3D Printable Raman Spectrometer that uses a raspberryPi, a really bright laser and some parts you can grab from your favorite suppliers..!\r\n\r\nBASIC DESIGN GOALS:\r\n1. Make it Open.. Everything.. All of it..\r\n2.  Make it 3D Printable.\r\n3. Make it modular and easy to upgrade.\r\n4.  Make it as easy to build as possible.\r\n5.  Make it easy to customize and open to improvement.\r\n6.  Use only commonly available off the shelf components whenever possible.\r\n7.  Have a remote interface that will allow it to be controlled and viewed from anywhere.\r\n8.  Compare the spectra to the online internet spectral databases.\r\n9.  Provide the capability to log data to remote databases, share with friends and colleagues..\r\n10.  Not be just another open source spectrometer..\r\n11.  Make it easy to use and intuitive.\r\n12. Make it attractive with an elegant design..\r\n13. Make it useful and just cool to have!",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7350501407154571880.jpg",
      "views":226798,
      "comments":147,
      "followers":2445,
      "skulls":569,
      "logs":88,
      "details":1,
      "instruction":13,
      "components":77,
      "images":6,
      "created":1401426248,
      "updated":1552165567,
      "tags":[
        "STM32",
        "objective lens",
        "mechanical",
        "acs712",
        "spectroscope",
        "wifi",
        "edge filter",
        "3d",
        "touch sensitive",
        "TheHackadayPrize",
        "532nm",
        "Stepper motor",
        "capacitive",
        "RASPI",
        "laser shutter",
        "Relay",
        "raman",
        "spectrometer",
        "bluetooth",
        "rack and pinion",
        "raspberrypi",
        "mirror",
        "hbridge",
        "ccd array",
        "hardware",
        "CCD",
        "servo",
        "beam splitter",
        "openscad",
        "spectra",
        "raman spectroscopy",
        "ongoing project",
        "Neopixel",
        "st "
      ]
    },
    {
      "id":12989,
      "url":"https:\/\/hackaday.io\/project\/12989-thor",
      "owner_id":144585,
      "name":"Thor",
      "summary":"OpenSource 3D printable Robotic Arm",
      "description":"Thor is an Open Source and printable robotic arm with six degrees of freedom.\r\n\r\nIts configuration (yaw&#xAD;-roll&#xAD;-roll&#xAD;-yaw&#xAD;-roll&#xAD;-yaw) is the same one that is used on most\r\n\r\nmanipulator robots that currently exist in the market.\r\n\r\nIn its upright position, Thor is about 625mm and it can lift objects up to 750 grams.\r\n\r\nThe project started a year ago as my Final Degree Project called &quot;Design and startup of an\r\n\r\nOpen Source and printable 6DOF robotic arm&quot; but a lot of things have changed since the\r\n\r\npresentation day.\r\n\r\nThe main purpose of this project was to create a robotic arm that could be used in\r\n\r\nuniversities and schools to teach robotics instead of using simulation software or low\r\n\r\naccurate models. Having this in mind, the final prototype had to be affordable and, of course,\r\n\r\nOpen Source.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/783551470235335866.jpg",
      "views":156245,
      "comments":74,
      "followers":1970,
      "skulls":558,
      "logs":15,
      "details":1,
      "instruction":6,
      "components":51,
      "images":4,
      "created":1470235128,
      "updated":1563280237,
      "tags":[
        "electronics",
        "Robotics",
        "2016HackadayPrize",
        "3d printing",
        "ongoing project",
        "hardware",
        "automation"
      ]
    },
    {
      "id":1720,
      "url":"https:\/\/hackaday.io\/project\/1720-20-wireless-arduino-home-automation-w-openhab",
      "owner_id":15499,
      "name":"$20 Wireless Arduino Home Automation w\/ OpenHAB",
      "summary":"Integration of cheap wireless Arduino sensor nodes with an awesome home automation platform called OpenHAB.  Explore interface options.",
      "description":"There are plenty of \"Arduino Home Automation\" examples on the net, but they didn't fit my needs - the parts are expensive, or they don't give you a good interface, or you have to write a lot of your own code for the interface.  They might be tethered to ethernet, or have poor wireless range, or can't be battery powered.\r\n\r\nThe goal of this project is to provide all the information others would need to integrate wireless Arduino nodes into a full-featured home automation system, with polished Android\/iPhone apps as well as browser-based user interface.  In addition, the automation gateway can historize and chart sensor data, react to sensor values (send emails, do android push or iphone prowl notification, etc...), as well as control existing commercial products you may already own (Sonos speakers, WEMO, Insteon, z-wave devices).\r\n\r\nI've made the design as flexible as I know how.  This project is an enabler, by extensibly connecting two great open source platforms:  Arduino & OpenHAB.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/1792701406858940661.png",
      "views":248122,
      "comments":22,
      "followers":4001,
      "skulls":539,
      "logs":10,
      "details":1,
      "instruction":2,
      "components":5,
      "images":6,
      "created":1404274433,
      "updated":1554388653,
      "tags":[
        "wireless sensor",
        "iot",
        "TheHackadayPrize",
        "raspberry pi",
        "mosquitto",
        "arduino",
        "ongoing project",
        "mqtt",
        "openhab",
        "home automation"
      ]
    },
    {
      "id":21581,
      "url":"https:\/\/hackaday.io\/project\/21581-flexible-smartwatch",
      "owner_id":11592,
      "name":"Flexible Smartwatch",
      "summary":"A 2.5mm thick flexible smart watch with e-ink display, BT 4.0, and health sensors.",
      "description":"This project aims to build a thin, flexible smartwatch. It&apos;s wrap-around display and touchscreen will allow it to display more data at a glance than current devices. Besides telling time and displaying notifications, the watch will feature pulse rate, blood oxygen, and step sensors for health monitoring.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/1579651493481311366.jpg",
      "views":57676,
      "comments":27,
      "followers":773,
      "skulls":539,
      "logs":1,
      "details":1,
      "instruction":0,
      "components":0,
      "images":3,
      "created":1493478257,
      "updated":1553701564,
      "tags":[
        "e-ink",
        "2017HackadayPrize",
        "wearable",
        "ongoing project",
        "hardware",
        "smartwatch",
        "eink"
      ]
    },
    {
      "id":13210,
      "url":"https:\/\/hackaday.io\/project\/13210-the-fsociety-keyboard",
      "owner_id":9608,
      "name":"The fsociety Keyboard",
      "summary":"(Mr.Robot's) fsociety inspired Mechanical keyboard. Wirelessly sense, assist and automate your good and bad computing activity. ",
      "description":"As a matter of fact, people nowadays can easily spend &gt;10 hours a day in front of a computer; wiggling the mouse, click and clacking the keyboard, those things are just inseparable part of our modern life. HID such as keyboard has simply become an integral part of the society and also our primary window to the digital world. Only little we realize that the device that we rigorously use daily hasn&apos;t changed much, remains &apos;dumb&apos; as it was first invented. With more and more freaking-tasks often need to be handled simultaneously, we still rely heavily on our lazy-brain telling our hand to type here &amp; there. We often end up inputting the same damn-password so many times because most of those safe-secure password keeper are just too complicated to startup. No matter what we are doing, what&apos;s happening in the surrounding, how late you are staying up the night, our keyboard remains the way it always is, doesn&apos;t help a thing and I&apos;M GETTING SICK OF IT!",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/5378541471777397784.jpg",
      "views":72996,
      "comments":53,
      "followers":631,
      "skulls":532,
      "logs":11,
      "details":1,
      "instruction":3,
      "components":23,
      "images":6,
      "created":1471705335,
      "updated":1474475141,
      "tags":[
        "Bluefruit",
        "ws2812b",
        "2016HackadayPrize",
        "hardware",
        "Mechanical keyboard",
        "wifi",
        "lora",
        "arduino",
        "automation",
        "mr.robot",
        "avr",
        "ongoing project",
        "nfc",
        "hack",
        "fsociety",
        "rgb led",
        "cherry mx",
        "diy",
        "SICK OF TYPING",
        "keyboard"
      ]
    },
    {
      "id":1023,
      "url":"https:\/\/hackaday.io\/project\/1023-low-cost-co2-laser-build",
      "owner_id":7174,
      "name":"Low Cost CO2 Laser Build",
      "summary":"Goal:  To assemble a working CO2 Laser from a minimum investment\r\nusing only tools one can find at your average home improvement store.",
      "description":"Allowable extras will be:\r\n\r\noptics, This includes a gold mirror and a ZnSe Lens for the output\r\n\r\nNeon Sign Transformer, it must be non-GFI.  You can often\r\n\r\nget one from a local neon guy out of his scrap bin for free if you ask\r\nnicely\u2026 and bring cookies.\r\n\r\nGlass tubing,  also from the neon guy.\r\nI used 12mm ID\u2026. bring more cookies, especially oatmeal raisin,\r\neveryone brings chocolate chip\u2026 surprise him :D\r\n\r\nAnother item that is nice, but not required is a variac to control the output voltage of the neon transformer\r\n\r\nHelium, get this from walmart as it is used for party balloons.\r\n\r\nNitrogen and CO2 can either be obtained from the air we breath, OR if you wish, a welding supply store.\r\n\r\nConstruction of various Parts:  If you plan on building\r\nthis, read the ENTIRE thing first as I may have made design changes or\r\nredone things along the way as I discovered new or better methods or\r\ncorrected errors.\r\n\r\n~Jessie\r\ntwitter  https:\/\/twitter.com\/ThunderSqueakAK  \r\n",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/309361398979277251.jpg",
      "views":115638,
      "comments":26,
      "followers":1399,
      "skulls":502,
      "logs":1,
      "details":1,
      "instruction":5,
      "components":0,
      "images":1,
      "created":1398979311,
      "updated":1523622139,
      "tags":[
        "CO2",
        "laser"
      ]
    },
    {
      "id":1230,
      "url":"https:\/\/hackaday.io\/project\/1230-goliath-a-gas-powered-quadcopter",
      "owner_id":9584,
      "name":"Goliath - A Gas Powered Quadcopter",
      "summary":"A BIG Gas Powered Quadcopter",
      "description":"Goliath is an open source prototype vehicle for developing gas-powered quadcopters.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/3948581473895645577.jpg",
      "views":160479,
      "comments":116,
      "followers":894,
      "skulls":479,
      "logs":79,
      "details":1,
      "instruction":11,
      "components":22,
      "images":6,
      "created":1401054287,
      "updated":1559705775,
      "tags":[
        "ROtor",
        "ROUTER",
        "decapitron",
        "rc",
        "PIXHAWK",
        "Quadcopter",
        "pX4",
        "hardware",
        "gas",
        "CNC",
        "ongoing project",
        "drone",
        "TheHackadayPrize",
        "Composite",
        "DW2K14",
        "foam",
        "hover",
        "propeller"
      ]
    },
    {
      "id":2552,
      "url":"https:\/\/hackaday.io\/project\/2552-farmbot-open-source-cnc-farming",
      "owner_id":25022,
      "name":"FarmBot - Open-Source CNC Farming",
      "summary":"FarmBot is an open-source CNC farming machine and software package built for small scale, hyper local, DIY food production.",
      "description":"FarmBot is an open-source CNC farming machine and software package designed for small-scale precision food production. Similar to 3D printers and CNC milling machines, FarmBot hardware employs linear guides in the X, Y, and Z directions. This allows for tooling such as seed injectors, watering nozzles, sensors, and weed removal tools to be precisely positioned and used on the plants and soil.\r\n\r\nFarmBot is controlled by an Arduino\/RAMPS stack and an internet connected Raspberry Pi 2. The hardware is designed to be simple, scalable, hackable, and easily produced.\r\n\r\nUsing the web application, the user can graphically design their farm or garden to their desired specifications and synchronize the numerical control code with the hardware. Other features include storing and manipulating data maps, a decision support system to facilitate data driven design, access to an open plant data repository, and real-time control and logging.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/2003671444700410847.png",
      "views":100146,
      "comments":11,
      "followers":1433,
      "skulls":468,
      "logs":49,
      "details":1,
      "instruction":9,
      "components":33,
      "images":3,
      "created":1408408786,
      "updated":1559561714,
      "tags":[
        "ongoing project",
        "Agriculture",
        "diy",
        "Precision AG",
        "opensource",
        "raspberry pi",
        "OpenFarm",
        "food",
        "arduino",
        "FarmBot",
        "gardening",
        "2015HackadayPrize",
        "Farming",
        "CNC"
      ]
    },
    {
      "id":158779,
      "url":"https:\/\/hackaday.io\/project\/158779-dexter",
      "owner_id":320031,
      "name":"Dexter",
      "summary":"An open-source, 3D printed, high precision robotic arm with trainability",
      "description":"Dexter is an open-source robotic arm mostly made with a 3D printer. It uses 5 NEMA-17 stepper motors to control its 5 axes along with harmonic drives on 3 of them. We put quadrature optical encoders on each axis since stepper motors don&apos;t have encoders and they sometimes skip if not strong enough. Having these encoders allows the FPGA microcontroller on Dexter to poll the sensors fast enough and correct the motor&apos;s position in real time. Thanks to our gateware, we can poll each axis 5 million times per second, creating a 200 nanosecond feedback loop. Dexter is licensed under GPL3 so the design can be reproduced and modified at will. All of our files are on our OnShape, GitHub, and Thingiverse and a link to the building manual is in the build instructions.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/3885391527874258152.jpg",
      "views":50519,
      "comments":44,
      "followers":722,
      "skulls":468,
      "logs":13,
      "details":1,
      "instruction":4,
      "components":35,
      "images":6,
      "created":1527878407,
      "updated":1563989384,
      "tags":[
        "3D printed",
        "ongoing project",
        "ROBOT",
        "low cost",
        "FPGA",
        "robotic arm",
        "hardware",
        "haptic",
        "2018hackadayprize"
      ]
    },
    {
      "id":865,
      "url":"https:\/\/hackaday.io\/project\/865-raspberry-eye",
      "owner_id":5041,
      "name":"Raspberry Eye",
      "summary":"Head-mounted computer with see-through display made from cheap or printed components",
      "description":"I wanted to do something interesting with my RPi and a 2.4\" TFT LCD. Google Glass was hot in the news, so I've decided to hack something similar. The semi-transparent mirror was extracted from Eye of Horus Beamsplitter, and the projection lens is cut from a plastic 3x Fresnel magnifying lens. The box and mounting parts are 3D-printed from ABS. Head strap is for GoPro. One RPi USB port is used for WiFi, and second for 2.4Ghz small wireless keyboard\/mouse combo. All together cost around 100$. I haven't figured out a good option for the power supply yet, and don't know if this thing can have a practical application. The display driver is fbtft framebuffer, so both text and (non-accelerated) graphical modes are possible, but with 320x240 resolution using X is not too exciting. Display brightness is sufficient if ambient light is not too bright.\r\n\r\nHere is a demo video: https:\/\/www.youtube.com\/watch?v=lCYnIHqwIJU",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/4162611397923424583.jpg",
      "views":124099,
      "comments":47,
      "followers":1381,
      "skulls":452,
      "logs":4,
      "details":1,
      "instruction":0,
      "components":8,
      "images":6,
      "created":1397926344,
      "updated":1521510978,
      "tags":[
        "see-through",
        "head-mounted display",
        "raspberry pi"
      ]
    },
    {
      "id":39494,
      "url":"https:\/\/hackaday.io\/project\/39494-pcb-motor",
      "owner_id":217113,
      "name":"PCB Motor",
      "summary":"A smaller and cheaper open source  brushless motor",
      "description":"My open source PCB motor is my attempt to build a smaller, cheaper and easier to assemble micro brushless motor. \r\n\r\nWhat unique about this motor design is that the stator is printed on a 4-layer PCB board. The six stator poles are spiral traces wounded in a star configuration. Although these coils produce less torque compared to an iron core stator, the motor is still suitable for high-speed applications. \r\n\r\nIt also has a 16mm diameter, 1.7mm thin 3d printed 4-pole rotor. So the total thickness of this axial flux motor adds up to 5mm (excluding the shaft) and weighs 1.5 grams. \r\n\r\nThe inspiration for this idea came from trying to build smaller and cheaper drone. Making the motor onto the PCB itself will reduce the overall price of any tiny robot, allowing swarm robotics to become more affordable.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/532811521061494092.png",
      "views":53570,
      "comments":74,
      "followers":1004,
      "skulls":446,
      "logs":26,
      "details":1,
      "instruction":1,
      "components":5,
      "images":5,
      "created":1516657804,
      "updated":1563038531,
      "tags":[
        "Motor",
        "2018hackadayprize",
        "micro",
        "pcb",
        "ongoing project",
        "Quadcopter",
        "hardware",
        "ROtor",
        "robots",
        "drone",
        "brushless",
        "Robotics",
        "stator",
        "coil"
      ]
    },
    {
      "id":270,
      "url":"https:\/\/hackaday.io\/project\/270-cubex",
      "owner_id":107,
      "name":"CUBEX",
      "summary":"High Altitude Balloon payload capable of streaming live pictures, gps coordinates, and data telemetry.",
      "description":"CUBEX is a high altitude balloon payload with a camera, GPS, ISM band radio, lipo battery, solar cells, and charger\/power management circuit. The payload is capable of sending downlink telemetry of its GPS coordinates as well as pictures it takes while in flight, all live. The solar charging circuit allows the payload to run for days as long as the balloon holds float. The payload made its maiden voyage at the Layerone hacker conference in Monrovia, CA on May 24th! \r\n\r\nCUBEX is connected to any radio station (as simple as a RTL USB) listening at 434.460Mhz using only 10mW! Anyone within a hundred miles of the payload can download the images it takes during flight! Bringing nearspace to the ground!\r\n\r\nProject Page:\r\nhttp:\/\/habexproject.org\/cubex\/\r\n\r\nEvent Page:\r\nhttp:\/\/www.layerone.org\/habex-launch-returns\/\r\n\r\nHAB Tracking Site:\r\nhttp:\/\/habitat.habhub.org\/mobile-tracker\/\r\n\r\nMajor thanks to Anthony Stirk and Phil Heron for his many contributions to this project!\r\n",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/9663311397189064039.png",
      "views":52432,
      "comments":22,
      "followers":1151,
      "skulls":442,
      "logs":10,
      "details":1,
      "instruction":8,
      "components":6,
      "images":6,
      "created":1393829079,
      "updated":1555630231,
      "tags":[
        "cubex",
        "HABEX",
        "TheHackadayPrize",
        "balloon",
        "altitude",
        "high"
      ]
    },
    {
      "id":114738,
      "url":"https:\/\/hackaday.io\/project\/114738-automatic-infinite-3d-printer",
      "owner_id":163046,
      "name":"Automatic Infinite 3D Printer",
      "summary":"The Automatic Infinite 3D Printer (i3D) gives anyone the power of a factory. ",
      "description":"3D printing has the potential to democratize manufacturing. Since 3D printers are easy to use and low cost, they allow anyone to make incredibly complex things. I&apos;m confident that anyone reading this has seen something cool made on a low cost hobby grade 3D printer. The technology has opened up new doors to makers and hackers.\r\n\r\nHowever the capabilities of 3D printers are limited by requirement of human operation. The need of manual part removal prevents 3D printers from being used for mass production purposes. Therefore, the purpose of this project is to build a fully autonomous 3D printer. A 3D printer that can print a continuous stream of parts without user interaction. The finished machine is capable of independently ejecting and starting print jobs. Additional, the 3D printer&apos;s conveyor belt mechanism allows it make infinitely long prints. The Automatic Infinite 3D Printer (i3D) allows any small business, organization, and person to leverage the power of a factory.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/6205861540205408609.jpg",
      "views":73059,
      "comments":44,
      "followers":1190,
      "skulls":436,
      "logs":26,
      "details":1,
      "instruction":11,
      "components":17,
      "images":6,
      "created":1522650562,
      "updated":1563891671,
      "tags":[
        "Robotics",
        "ongoing project",
        "python",
        "electron",
        "3d printing",
        "automation",
        "hardware",
        "2018hackadayprize",
        "node.js",
        "ConveyOr Belt"
      ]
    },
    {
      "id":37,
      "url":"https:\/\/hackaday.io\/project\/37-feedback-hackadayio",
      "owner_id":182178,
      "name":"Feedback - Hackaday.io",
      "summary":"Bugs, Feature Requests, Wishlists",
      "description":"Please leave a comment in this project to give us your feedback about your Hackaday.io experience.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/5487511392662156579.png",
      "views":24278,
      "comments":3927,
      "followers":690,
      "skulls":434,
      "logs":0,
      "details":1,
      "instruction":0,
      "components":0,
      "images":1,
      "created":1390259421,
      "updated":1555943537,
      "tags":[
        "ongoing project",
        "feedback",
        "hackaday",
        "projects"
      ]
    },
    {
      "id":159811,
      "url":"https:\/\/hackaday.io\/project\/159811-esp32-wiphone",
      "owner_id":331411,
      "name":"ESP32 WiPhone",
      "summary":"The WiPhone project is an open source mobile IP phone. WiPhone is intended to be hackable, modular, cheap, and open, while remaining usable.",
      "description":"",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/3847531548234127445.png",
      "views":53218,
      "comments":83,
      "followers":640,
      "skulls":433,
      "logs":23,
      "details":1,
      "instruction":0,
      "components":0,
      "images":6,
      "created":1531900841,
      "updated":1561731947,
      "tags":[
        "voip",
        "sip",
        "audio",
        "wifi",
        "ongoing project",
        "open source",
        "hardware",
        "LCD",
        "graphics",
        "arduino",
        "microcontroller",
        "Software",
        "ESP32",
        "games"
      ]
    },
    {
      "id":18633,
      "url":"https:\/\/hackaday.io\/project\/18633-lixie-an-led-alternative-to-the-nixie-tube",
      "owner_id":143563,
      "name":"\"Lixie\", an LED alternative to the Nixie Tube",
      "summary":"Always jealous of people who could afford big Nixie Tubes, I rolled my own alternative with WS2812Bs and laser cutting!",
      "description":"LIXIES HAVE DROPPED IN PRICE TO $36.99, AND ARE AVAILABLE RIGHT NOW! <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https:\/\/www.tindie.com\/products\/connornishijima\/lixie-an-led-alternative-to-the-nixie-tube\">https:\/\/www.tindie.com\/products\/connornishijima\/lixie-an-led-alternative-to-the-nixie-tube<\/a> I&apos;ve always been a fan of the Nixie Tube. Beautiful typography, endearing glow, and very clever technology. But when commercial production stopped in the 1990s, prices for surplus Nixie Tubes began to rise. Smaller tubes like the IN-16 are still only about $3.50\/piece, but bigger and more desirable tubes like the IN-18 can run up to $45\/piece. If you wanted to make a 6-digit clock, it can cost up to $270 just for the tubes! And they&apos;re potentially dangerous. And they might &quot;burn out&quot; next week. And they need special switching circuitry. And they&apos;re old news. So let&apos;s modernize the Nixie Tube!",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/6504681532662412988.jpg",
      "views":80243,
      "comments":46,
      "followers":492,
      "skulls":429,
      "logs":11,
      "details":1,
      "instruction":0,
      "components":6,
      "images":5,
      "created":1480368908,
      "updated":1557503806,
      "tags":[
        "lixie",
        "Neopixel",
        "ongoing project",
        "hardware",
        "Nixie",
        "arduino",
        "tube",
        "ws2812b"
      ]
    },
    {
      "id":21355,
      "url":"https:\/\/hackaday.io\/project\/21355-reprap-helios",
      "owner_id":215568,
      "name":"RepRap HELIOS",
      "summary":"RepRap HELIOS is a highly printable SCARA 3D printer.  It has an outrageous print area and can print on almost any flat surface.",
      "description":"Current 3D printing practices never seemed quite right to me.  Our tech world is full of amazing robots with amazing capabilities while our 3D printers are usually stuck in a box.  I am hoping to do my part to peel that box back a bit and show off some possibilities.\r\n\r\nRepRap HELIOS is a 3D printer that uses a SCARA arm while at the same time has no moving steppers.  It is tiny, light, quick, accurate, and has a massive print area.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/6894621492836289680.jpg",
      "views":31882,
      "comments":81,
      "followers":1577,
      "skulls":428,
      "logs":4,
      "details":1,
      "instruction":0,
      "components":4,
      "images":3,
      "created":1492836910,
      "updated":1559301338,
      "tags":[
        "Robotics",
        "3d printing",
        "hardware",
        "2017HackadayPrize",
        "ongoing project"
      ]
    },
    {
      "id":1662,
      "url":"https:\/\/hackaday.io\/project\/1662-global-radiation-monitoring-network",
      "owner_id":13270,
      "name":" Global radiation monitoring network",
      "summary":"The uRADMonitor is a plug-and-play, low power, self contained radiation monitoring device, connected to a centralised server component.",
      "description":"Hackaday Prize Semifinalist in 2014, the uRADMonitor Model A is a digital radiation dosimeter unit with a network interface to centralise the data online. It uses a Geiger Muller tube to sense the ionising radiation, and uses very little power to run. It comes in a rugged aluminium enclosure and can be installed outdoors, if mounted in vertical position, thanks to a rubber gasket that makes it rainproof.\r\nThere are several hundreds of such units distributed worldwide, in what has become World&apos;s first global Radiation Monitoring network.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/3682271420383930726.jpg",
      "views":40439,
      "comments":49,
      "followers":668,
      "skulls":422,
      "logs":57,
      "details":1,
      "instruction":0,
      "components":4,
      "images":6,
      "created":1404028909,
      "updated":1494786412,
      "tags":[
        "counter",
        "radiation",
        "dosimeter",
        "completed project",
        "geiger",
        "TheHackadayPrize",
        "global monitoring",
        "global array",
        "monitor"
      ]
    },
    {
      "id":4434,
      "url":"https:\/\/hackaday.io\/project\/4434-pidp-8i",
      "owner_id":36018,
      "name":"PiDP-8\/I",
      "summary":"Remaking the PDP-8\/I using the Pi, simh & a replica front panel",
      "description":"Of all the PDP-8s, the 8\/I is my favourite. Alas, getting a real one is impractical: they are impossible to obtain, and just as hard to maintain. As I learned from my KIM-1 clone, making a replica is a very good way to get involved with the innards of a vintage machine. So here is my scale 2:3 replica.\r\n",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7834221457308061242.jpg",
      "views":58766,
      "comments":22,
      "followers":510,
      "skulls":420,
      "logs":18,
      "details":1,
      "instruction":1,
      "components":8,
      "images":6,
      "created":1424811840,
      "updated":1558218059,
      "tags":[
        "2015HackadayPrize",
        "retrocomputing",
        "PDP-8",
        "raspberry pi",
        "SIMH",
        "hardware",
        "classic",
        "completed project"
      ]
    },
    {
      "id":4154,
      "url":"https:\/\/hackaday.io\/project\/4154-bench-power-supply",
      "owner_id":4501,
      "name":"Bench Power Supply",
      "summary":"Designing an open source, modular bench power supply to rule them all.",
      "description":"This is a design for an open source, modular bench power supply with enough features to compete with the mid-range commercial units in the $1000-ish range.  This project includes features such as software calibration, programmatic control via USB Raw HID, etc.  In its simplest form, it is very affordable, but can be easily scaled up to a larger, more powerful unit.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/9563991434584072635.jpg",
      "views":96952,
      "comments":112,
      "followers":887,
      "skulls":416,
      "logs":48,
      "details":1,
      "instruction":3,
      "components":66,
      "images":6,
      "created":1422573752,
      "updated":1527763814,
      "tags":[
        "LM338",
        "hackadayprize",
        "atmel",
        "2015HackadayPrize",
        "ATMega32u4",
        "avr",
        "LM317",
        "microchip",
        "hardware",
        "TEXAS INSTRUMENTS",
        "power supply",
        "LM337",
        "completed project",
        "power"
      ]
    },
    {
      "id":21453,
      "url":"https:\/\/hackaday.io\/project\/21453-keymu-open-source-keychain-sized-gaming-console",
      "owner_id":207928,
      "name":"Keymu - open source keychain-sized gaming console",
      "summary":"A fully functional, completely open-source, and totally nerdy keychain-sized multi-platform emulation console to build yourself.",
      "description":"Hey guys, you like Keymu? Have a look at a new improved version Keymu: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https:\/\/hackaday.io\/project\/164934-funkey-project-all-your-games-on-your-keychainKeymu\">https:\/\/hackaday.io\/project\/164934-funkey-project-all-your-games-on-your-keychainKeymu<\/a> is among the world&#x2019;s smallest emulation console (42x46x17mm), so small it can easily be attached to your keychain while being fully playable. It is based on the Intel Edison and is fully open-source. But more than being open-source, the code, BOM, PCB and mechanical design will be provided with tutorials so that anyone can build one and\/or improve it.Have you ever dreamed of having a keychain allowing you to play your favorite NES, SNES or GBA games? No ? Well neither did I until Sprite_TM&apos;s cute tiny version of a gameboy completely won my heart at the 2016 Hackaday superconference , as I sincerely hope Keymu will win yours. And of it does, everything is provided so that you ",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/6707591495442733797.jpg",
      "views":106362,
      "comments":17,
      "followers":534,
      "skulls":415,
      "logs":5,
      "details":1,
      "instruction":2,
      "components":9,
      "images":6,
      "created":1493139013,
      "updated":1563185403,
      "tags":[
        "ongoing project",
        "MISC",
        "emulation",
        "2017HackadayPrize",
        "intel edison"
      ]
    },
    {
      "id":2736,
      "url":"https:\/\/hackaday.io\/project\/2736-bionic-yourself-v20",
      "owner_id":6312,
      "name":"Bionic Yourself V2.0",
      "summary":"Project Bionic Yourself (B10N1C) is a small implant for your arm that makes you a bionic-superhero.",
      "description":"Project Bionic Yourself (B10N1C) is a small implant for your arm that makes you a bionic-superhero. The idea comes from utilizing technology to give you a super ability such as wireless control devices by moving a single finger, sense electromagnetic fields, and even scan RFID keys while all being stored inside your body. While these are a few examples, the possibilities range much further. It's also a user-integrated hacker tool that has the opportunity to change life as we know it.\r\n\r\nThe goal of the B10N1C is to explore the application of a small, safe, robust implant that communicates with the outside world through technology and the various user interfaces found in one\u2019s day to day life.\r\n\r\nThe proposed project hinges on the idea of becoming bionically similar to Robocop. Using my knowledge of implantable materials (silicone, polyurethane, etc), I hope to upgrade my body to communicate with the tech-friendly culture that we live in today.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7176431409665975009.jpg",
      "views":72961,
      "comments":104,
      "followers":1419,
      "skulls":399,
      "logs":16,
      "details":1,
      "instruction":0,
      "components":17,
      "images":3,
      "created":1408571493,
      "updated":1545916250,
      "tags":[
        "implant",
        "rfduino",
        "robocop",
        "diy",
        "Bionic",
        "arduino",
        "TheHackadayPrize",
        "Electromyography",
        "biohacking"
      ]
    },
    {
      "id":157812,
      "url":"https:\/\/hackaday.io\/project\/157812-3d-printed-robot-actuator",
      "owner_id":313303,
      "name":"3D Printed Robot Actuator",
      "summary":"A high speed and high torque robotic actuator using low-cost brushless motors, custom controller, 3D printed parts and bearings.",
      "description":"I wanted to make a quadruped or biped with enough power to jump off the ground. Typical servo solutions were not good enough.\r\n\r\nDesign sections\r\nMechanical - Cycloidal gearbox with rolling elements, bearings and dual input and output shafts\r\nMotor -  Low-cost high torque Brushless outrunner using Multistar Elite Motors\r\nSensors - Dual absolute magnetic encoders for motor position and joint position \r\nElectronics - Custom PCB including Mosfets with Mosfet driver DRV with Cypress PSOC4 SOC, sensor inputs and communications. Plus Magnetic Encoder PCBs\r\nSoftware - Field Oriented Control (FOC) for position control. Mosfet Driver, Encoder and CAN communications.\r\n\r\nThe purpose of the Actuator is to create a design than I can easily make with a 3D printer using cheap and powerful Brushless motors from China. I have three prototype sizes of Cycloidal gearboxes 44mm, 60mm and 78mm diameter. The size of the motor, number of poles and their shafts are also adjustable.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/3041061528009747128.jpg",
      "views":48281,
      "comments":108,
      "followers":552,
      "skulls":385,
      "logs":18,
      "details":0,
      "instruction":2,
      "components":11,
      "images":2,
      "created":1525364852,
      "updated":1557759251,
      "tags":[
        "BLDC",
        "tail",
        "Brushless controller",
        "quadruped",
        "open servo",
        "2018hackadayprize",
        "open source",
        "Open brushless",
        "ongoing project",
        "ROBOT",
        "cycloidal gearbox",
        "actuator",
        "cycloidal"
      ]
    },
    {
      "id":38,
      "url":"https:\/\/hackaday.io\/project\/38-arduino-compatible-fpga-shield",
      "owner_id":8,
      "name":"Arduino-Compatible FPGA Shield",
      "summary":"Spartan 6 FPGA Shield includes SPI Configuration Flash, Breakout Headers, SRAM, programmable from Arduino or SPI Programmer",
      "description":"<p>Motivated by an interest in teaching folks how to use FPGAs and espouse the virtues of FPGA-coolness (& like many, frustrated a bit by a number of limitations of the Arduino incl. IO, peripherals, etc) I\u2019ve endeavored to create the first (that I know of) FPGA-based Arduino shield.<\/p><p><br>This board - which I'm documenting here as I go along - includes heaps of additional IO, memory resources, etc. and is SPI programmable via SPI flash (including programming from the Arduino Due)...And is just an all-round cool way to introduce programmable device technology (beyond simple logic) to the uninitiated.<\/p><p>  Likewise, it will have more than enough grunt for the old-pro to hack together some totally awesome, totally re-configurable systems.  <\/p>",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/3805341409790656846.JPG",
      "views":70806,
      "comments":85,
      "followers":1939,
      "skulls":379,
      "logs":35,
      "details":1,
      "instruction":11,
      "components":5,
      "images":6,
      "created":1390331199,
      "updated":1524301896,
      "tags":[
        "VHDL",
        "SPI FLash",
        "Verilog",
        "SDRAM",
        "FPGA",
        "JTAG",
        "arduino",
        "Xilinx",
        "ongoing project"
      ]
    },
    {
      "id":249,
      "url":"https:\/\/hackaday.io\/project\/249-moti-a-smart-servo",
      "owner_id":1027,
      "name":"Moti, a smart servo",
      "summary":"Moti is a smart servo that simplifies the design of intricate robots. ",
      "description":"Moti is a smart servo motor that makes it easier to build robots. Imagine making a humanoid with moving limbs. You&apos;d need a motor, sensors and a microcontroller in each joint. You&apos;d also need to link the joints together to coordinate their actions. Moti has these features built-in. In each Moti you have a programmable microcontroller (arduino-compatible), breakout pins for attaching sensors or peripherals (eg bluetooth), and an RS485 networking port. Unlike conventional hobby servos, Moti turns continuously, so you can use it for wheels, or gear-down and still position-seek. And its the size of a standard size hobby servo, so you can keep your footprints to a minimum. We also want Moti to play well with the mobile devices and the web, so we&apos;re working on a RESTful API for developing apps. There&apos;s more to do. Check out <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http:\/\/www.robotstack.com\">http:\/\/www.robotstack.com<\/a>",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/2814041393703589741.jpg",
      "views":45192,
      "comments":47,
      "followers":727,
      "skulls":378,
      "logs":14,
      "details":1,
      "instruction":0,
      "components":20,
      "images":6,
      "created":1393703395,
      "updated":1559834405,
      "tags":[
        "ongoing project",
        "ROBOT",
        "arduino"
      ]
    },
    {
      "id":25092,
      "url":"https:\/\/hackaday.io\/project\/25092-zerobot-raspberry-pi-zero-fpv-robot",
      "owner_id":156285,
      "name":"ZeroBot - Raspberry Pi Zero FPV Robot ",
      "summary":"Raspberry Pi Zero 3D Printed Video Streaming Robot",
      "description":"ZeroBot is a Raspberry Pi Zero W based robot. It can be controlled using any computer or smartphone via a web browser. The integrated camera module makes for a low latency video stream. In addition the Raspberry Pi acts as a Wifi access point, so no router is required. The parts for the hull as well as the wheels can easily be printed on any regular 3D printer.<br><br>Some of the key features are:<br> - Compact CAD design with 3D printed components<br> - Analog control via a joystick (and multitouch)<br> - Simple battery solution using only a standard power bank<br> - Low latency streaming (~0.2s)<br> - Easy and cheap to build using widely available components<br><br>STL files on thingiverse: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https:\/\/www.thingiverse.com\/thing:2352440\">https:\/\/www.thingiverse.com\/thing:2352440<\/a>",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/9679821519158445324.jpg",
      "views":126263,
      "comments":188,
      "followers":457,
      "skulls":372,
      "logs":4,
      "details":1,
      "instruction":7,
      "components":6,
      "images":6,
      "created":1495989590,
      "updated":1552165567,
      "tags":[
        "html",
        "javascript",
        "2017HackadayPrize",
        "FPV",
        "3D Print",
        "controlled",
        "raspberry",
        "hardware",
        "Zero",
        "camera",
        "ongoing project",
        "ROBOT"
      ]
    },
    {
      "id":9461,
      "url":"https:\/\/hackaday.io\/project\/9461-lifepo4weredpi",
      "owner_id":87206,
      "name":"LiFePO4wered\/Pi",
      "summary":"LiFePO4 battery \/ UPS \/ power manager for Raspberry Pi",
      "description":"- Ever wished you could unplug your Raspberry Pi and move it elsewhere when you were in the middle of something and didn&apos;t want to turn it off?\r\n- Ever wanted to have your Pi run on battery power for a couple of hours?\r\n- Ever wanted to have your Pi sleep most of the time, but wake up to do a short task at regular intervals, all while battery powered?\r\n- Ever wanted your Pi to have a power button that would do a clean shutdown instead of just pulling power, even when you were using it headless?\r\n- Ever had a high-availability application where you wanted your Pi to run through short power outages, and cleanly shut down and come back online when power returned?\r\n\r\nIf you answered &quot;yes&quot; to any of these questions, the LiFePO4wered\/Pi or LiFePO4wered\/Pi3 are for you! :)\r\n\r\nThe LiFePO4wered\/Pi and LiFePO4wered\/Pi3 can now be bought on Tindie:\r\n<a href=\"https:\/\/www.tindie.com\/stores\/xorbit\/\" target=\"_blank\">https:\/\/www.tindie.com\/stores\/xorbit\/<\/a>",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/7661631472827837324.JPG",
      "views":76567,
      "comments":87,
      "followers":517,
      "skulls":370,
      "logs":48,
      "details":1,
      "instruction":0,
      "components":5,
      "images":6,
      "created":1454439637,
      "updated":1515353561,
      "tags":[
        "MSP430",
        "pi zero",
        "Battery",
        "2016HackadayPrize",
        "Software",
        "UPS",
        "TI",
        "smart power",
        "raspberry pi",
        "ongoing project",
        "i2c",
        "uptime",
        "hardware",
        "liFePo4",
        "power",
        "power manager",
        "TEXAS INSTRUMENTS"
      ]
    },
    {
      "id":164932,
      "url":"https:\/\/hackaday.io\/project\/164932-axiom-100kw-motor-controller",
      "owner_id":402462,
      "name":"Axiom: 100+kW Motor Controller",
      "summary":"High Power, High Performance 400V 300A 100+kW Motor Controller fully compatible with VESC",
      "description":"For the first time in history, Axiom provides clear, wide open access to the precise control of large 3 phase motors. And it couldn&apos;t be more timely, billions are spent accelerating the incoming era of electric vehicles, with massive EV fleet growth, and so many small and big companies competing to have a dominating role in the future of transportation.\r\n\r\nIt is put together by Marcos -MIT TR35-, endless-sphere forum legend HighHopes, 1\/4 mile EV WORLD RECORD HOLDER Arlo1, highest-engineering-grades Maxi, and using, improving and accelerating the cult-following work of Benjamin Vedder with a stream of new firmware code to make humanity better at spinning motors!\r\n\r\nIt&#x2019;s not only a feature rich high performance controller, it also comes in a power dense package. The best part of course is the hardware and firmware are open source! Making the schematic, BOM, and code available for everyone to experiment and improve, its the ideal platform for vehicles, research and industries",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/8265111555020821771.jpg",
      "views":23307,
      "comments":18,
      "followers":329,
      "skulls":356,
      "logs":17,
      "details":1,
      "instruction":0,
      "components":5,
      "images":6,
      "created":1554994894,
      "updated":1563488342,
      "tags":[
        "high power",
        "field oriented control",
        "gcc",
        "VESC",
        "Axiom",
        "FPGA",
        "igbt",
        "highhopes",
        "Osh",
        "IceStorm",
        "endless sphere",
        "Motor",
        "motor controller",
        "spm motor",
        "open source",
        "foc",
        "marcos",
        "hardware",
        "freecad",
        "ipm",
        "STM32",
        "ongoing project",
        "arlo1",
        "High voltage",
        "2019hackadayprize",
        "kicad"
      ]
    },
    {
      "id":205,
      "url":"https:\/\/hackaday.io\/project\/205-hoverlay-ii",
      "owner_id":751,
      "name":"Hoverlay II",
      "summary":"open hardware interactive midair screen",
      "description":"Hoverlay II is a low-cost, interactive, scaleable, open source vapor screen. It allows projection of images, videos and games right into midair and comes with it&apos;s own selection of interactive applications.\r\n\r\nShort explained, the device creates a thin, stable film of vaporized water, continuously travelling upwards in midair, which then acts as a floating rear projection canvas.\r\n\r\nIt works great with Microsoft Kinect and we&apos;ve also successfully tested it as a telepresence display device using Skype.\r\n\r\nSee the video: <a href=\"http:\/\/youtu.be\/RzPK1t_XLmU\" target=\"_blank\">http:\/\/youtu.be\/RzPK1t_XLmU<\/a>\r\n\r\nEven though one Hoverlay II unit is still quite handy (326 mm wide), up to 5 units can be plugged together to form a badass big 1630 mm wide, floating screen of &gt;1 m height. Bigger screens are possible by choosing more high-end components.\r\n\r\nHoverlay II is open hardware licensed under GPL V3.",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/9115111404768348087.jpg",
      "views":52571,
      "comments":22,
      "followers":589,
      "skulls":353,
      "logs":12,
      "details":1,
      "instruction":1,
      "components":20,
      "images":6,
      "created":1393403210,
      "updated":1556126879,
      "tags":[
        "laminar flow",
        "vapor",
        "ongoing project",
        "fog",
        "projection",
        "TheHackadayPrize",
        "display",
        "kinect",
        "open hardware",
        "ultrasonic",
        "interactive",
        "holodeck"
      ]
    },
    {
      "id":3555,
      "url":"https:\/\/hackaday.io\/project\/3555-zamek-the-offline-pocket-password-manager",
      "owner_id":37721,
      "name":"Zamek: The Offline Pocket Password Manager",
      "summary":"Creating and retrieving passwords for all your accounts has never been this easy and convenient!",
      "description":"Zamek is your personal, portable password manager.\r\n\r\nI&apos;m working on putting together a group-buy campaign for a batch of these with attractive cases! Sign up at <a href=\"https:\/\/www.crowdsupply.com\/soniktech\/zamek\" target=\"_blank\">https:\/\/www.crowdsupply.com\/soniktech\/zamek<\/a> to find out when you can get your own!\r\n\r\nSee a video review of the beta unit at <a href=\"https:\/\/www.youtube.com\/watch?v=gLEXId6XHqc\" target=\"_blank\">https:\/\/www.youtube.com\/watch?v=gLEXId6XHqc<\/a> !",
      "image_url":"https:\/\/cdn.hackaday.io\/images\/5265461491836069090.jpg",
      "views":31196,
      "comments":49,
      "followers":1063,
      "skulls":351,
      "logs":17,
      "details":1,
      "instruction":0,
      "components":5,
      "images":4,
      "created":1417767674,
      "updated":1531365990,
      "tags":[
        "security",
        "2016HackadayPrize",
        "usb",
        "trinket pro",
        "hardware",
        "ongoing project",
        "password"
      ]
    }
  ]
}
